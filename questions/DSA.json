[
    {
      "questionNo": 1,
      "question": "Which of the following is NOT a linear data structure?",
      "optiona": "Array",
      "optionb": "Linked List",
      "optionc": "Tree",
      "optiond": "Queue",
      "correctoption": "C"
    },
    {
      "questionNo": 2,
      "question": "What is the time complexity of binary search in the worst case?",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n log n)",
      "correctoption": "B"
    },
    {
      "questionNo": 3,
      "question": "Which sorting algorithm has the worst-case time complexity of O(n²)?",
      "optiona": "Merge Sort",
      "optionb": "Quick Sort",
      "optionc": "Heap Sort",
      "optiond": "Bubble Sort",
      "correctoption": "D"
    },
    {
      "questionNo": 4,
      "question": "In a max-heap, the largest element is always at:",
      "optiona": "Any leaf node",
      "optionb": "The root",
      "optionc": "Left child of root",
      "optiond": "Right child of root",
      "correctoption": "B"
    },
    {
      "questionNo": 5,
      "question": "Which data structure uses FIFO (First-In-First-Out) principle?",
      "optiona": "Stack",
      "optionb": "Queue",
      "optionc": "Tree",
      "optiond": "Graph",
      "correctoption": "B"
    },
    {
      "questionNo": 6,
      "question": "What is the space complexity of merge sort?",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n log n)",
      "correctoption": "C"
    },
    {
      "questionNo": 7,
      "question": "Which of the following is NOT a stable sorting algorithm?",
      "optiona": "Bubble Sort",
      "optionb": "Merge Sort",
      "optionc": "Quick Sort",
      "optiond": "Insertion Sort",
      "correctoption": "C"
    },
    {
      "questionNo": 8,
      "question": "The postfix expression for A+B*C is:",
      "optiona": "ABC*+",
      "optionb": "AB+C*",
      "optionc": "A+BC*",
      "optiond": "AB*C+",
      "correctoption": "A"
    },
    {
      "questionNo": 9,
      "question": "Which traversal gives nodes in non-decreasing order in a BST?",
      "optiona": "Pre-order",
      "optionb": "In-order",
      "optionc": "Post-order",
      "optiond": "Level-order",
      "correctoption": "B"
    },
    {
      "questionNo": 10,
      "question": "What is the maximum number of nodes in a binary tree of height h?",
      "optiona": "2^h - 1",
      "optionb": "2^(h+1) - 1",
      "optionc": "h^2",
      "optiond": "2h + 1",
      "correctoption": "A"
    },
    {
      "questionNo": 11,
      "question": "Which data structure is best suited for implementing recursion?",
      "optiona": "Queue",
      "optionb": "Stack",
      "optionc": "Linked List",
      "optiond": "Tree",
      "correctoption": "B"
    },
    {
      "questionNo": 12,
      "question": "What is the time complexity to access an element in an array?",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n log n)",
      "correctoption": "A"
    },
    {
      "questionNo": 13,
      "question": "Which algorithm uses divide and conquer strategy?",
      "optiona": "Bubble Sort",
      "optionb": "Merge Sort",
      "optionc": "Insertion Sort",
      "optiond": "Selection Sort",
      "correctoption": "B"
    },
    {
      "questionNo": 14,
      "question": "In a complete binary tree with n nodes, the height is:",
      "optiona": "log n",
      "optionb": "n/2",
      "optionc": "n",
      "optiond": "2^n",
      "correctoption": "A"
    },
    {
      "questionNo": 15,
      "question": "Which of the following is NOT a hashing technique?",
      "optiona": "Linear Probing",
      "optionb": "Quadratic Probing",
      "optionc": "Double Hashing",
      "optiond": "Binary Probing",
      "correctoption": "D"
    },
    {
      "questionNo": 16,
      "question": "The minimum number of comparisons needed to find the minimum and maximum of n elements is:",
      "optiona": "2n - 2",
      "optionb": "n - 1",
      "optionc": "3n/2 - 2",
      "optiond": "n log n",
      "correctoption": "C"
    },
    {
      "questionNo": 17,
      "question": "Which graph algorithm uses greedy approach?",
      "optiona": "Dijkstra's",
      "optionb": "Floyd-Warshall",
      "optionc": "Bellman-Ford",
      "optiond": "Kruskal's",
      "correctoption": "A"
    },
    {
      "questionNo": 18,
      "question": "What is the time complexity of heapify operation?",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n log n)",
      "correctoption": "B"
    },
    {
      "questionNo": 19,
      "question": "Which data structure is used for BFS of a graph?",
      "optiona": "Stack",
      "optionb": "Queue",
      "optionc": "Priority Queue",
      "optiond": "Tree",
      "correctoption": "B"
    },
    {
      "questionNo": 20,
      "question": "The time complexity of matrix chain multiplication using dynamic programming is:",
      "optiona": "O(n)",
      "optionb": "O(n log n)",
      "optionc": "O(n²)",
      "optiond": "O(n³)",
      "correctoption": "D"
    },
    {
      "questionNo": 21,
      "question": "Which of the following is NOT an application of stack?",
      "optiona": "Function calls",
      "optionb": "Undo operation",
      "optionc": "Process scheduling",
      "optiond": "Expression evaluation",
      "correctoption": "C"
    },
    {
      "questionNo": 22,
      "question": "The worst-case time complexity of quicksort is:",
      "optiona": "O(n)",
      "optionb": "O(n log n)",
      "optionc": "O(n²)",
      "optiond": "O(log n)",
      "correctoption": "C"
    },
    {
      "questionNo": 23,
      "question": "Which of the following is NOT a type of linked list?",
      "optiona": "Singly linked",
      "optionb": "Doubly linked",
      "optionc": "Circular linked",
      "optiond": "Quadruply linked",
      "correctoption": "D"
    },
    {
      "questionNo": 24,
      "question": "The time complexity to insert a node at the beginning of a linked list is:",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n log n)",
      "correctoption": "A"
    },
    {
      "questionNo": 25,
      "question": "Which algorithm is used to find shortest paths from a single source in a graph with negative weights?",
      "optiona": "Dijkstra's",
      "optionb": "Floyd-Warshall",
      "optionc": "Bellman-Ford",
      "optiond": "Prim's",
      "correctoption": "C"
    },
    {
      "questionNo": 26,
      "question": "The time complexity to search an element in a BST in worst case is:",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n log n)",
      "correctoption": "C"
    },
    {
      "questionNo": 27,
      "question": "Which of the following is NOT a collision resolution technique in hashing?",
      "optiona": "Chaining",
      "optionb": "Open Addressing",
      "optionc": "Double Hashing",
      "optiond": "Tree Addressing",
      "correctoption": "D"
    },
    {
      "questionNo": 28,
      "question": "The time complexity of DFS on a graph with V vertices and E edges is:",
      "optiona": "O(V)",
      "optionb": "O(E)",
      "optionc": "O(V + E)",
      "optiond": "O(V log E)",
      "correctoption": "C"
    },
    {
      "questionNo": 29,
      "question": "Which of the following is NOT a dynamic programming problem?",
      "optiona": "Fibonacci numbers",
      "optionb": "Knapsack problem",
      "optionc": "Tower of Hanoi",
      "optiond": "Matrix chain multiplication",
      "correctoption": "C"
    },
    {
      "questionNo": 30,
      "question": "The time complexity to build a heap from n elements is:",
      "optiona": "O(n)",
      "optionb": "O(log n)",
      "optionc": "O(n log n)",
      "optiond": "O(n²)",
      "correctoption": "A"
    },
    {
      "questionNo": 31,
      "question": "Which of the following is NOT a balanced BST?",
      "optiona": "AVL Tree",
      "optionb": "Red-Black Tree",
      "optionc": "B-Tree",
      "optiond": "Binary Heap",
      "correctoption": "D"
    },
    {
      "questionNo": 32,
      "question": "The time complexity of bubble sort in best case is:",
      "optiona": "O(1)",
      "optionb": "O(n)",
      "optionc": "O(n log n)",
      "optiond": "O(n²)",
      "correctoption": "B"
    },
    {
      "questionNo": 33,
      "question": "Which algorithm is used to find strongly connected components in a graph?",
      "optiona": "Dijkstra's",
      "optionb": "Kosaraju's",
      "optionc": "Prim's",
      "optiond": "Kruskal's",
      "correctoption": "B"
    },
    {
      "questionNo": 34,
      "question": "The time complexity to delete an element from a max-heap is:",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n log n)",
      "correctoption": "B"
    },
    {
      "questionNo": 35,
      "question": "Which of the following is NOT a graph representation?",
      "optiona": "Adjacency Matrix",
      "optionb": "Adjacency List",
      "optionc": "Incidence Matrix",
      "optiond": "Incidence Tree",
      "correctoption": "D"
    },
    {
      "questionNo": 36,
      "question": "The time complexity of radix sort for n numbers with maximum d digits is:",
      "optiona": "O(n)",
      "optionb": "O(dn)",
      "optionc": "O(n log n)",
      "optiond": "O(n²)",
      "correctoption": "B"
    },
    {
      "questionNo": 37,
      "question": "Which algorithm is used to find minimum spanning tree?",
      "optiona": "Dijkstra's",
      "optionb": "Floyd-Warshall",
      "optionc": "Prim's",
      "optiond": "Bellman-Ford",
      "correctoption": "C"
    },
    {
      "questionNo": 38,
      "question": "The time complexity to reverse a linked list is:",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n log n)",
      "correctoption": "C"
    },
    {
      "questionNo": 39,
      "question": "Which of the following is NOT a string matching algorithm?",
      "optiona": "KMP",
      "optionb": "Rabin-Karp",
      "optionc": "Boyer-Moore",
      "optiond": "Floyd-Warshall",
      "correctoption": "D"
    },
    {
      "questionNo": 40,
      "question": "The time complexity of counting sort when range is O(n) is:",
      "optiona": "O(n)",
      "optionb": "O(n log n)",
      "optionc": "O(n²)",
      "optiond": "O(n+k)",
      "correctoption": "D"
    },
    {
      "questionNo": 41,
      "question": "Which data structure is used for implementing LRU cache?",
      "optiona": "Queue",
      "optionb": "Stack",
      "optionc": "Hash Map + Doubly Linked List",
      "optiond": "Binary Search Tree",
      "correctoption": "C"
    },
    {
      "questionNo": 42,
      "question": "The time complexity of Floyd-Warshall algorithm is:",
      "optiona": "O(n)",
      "optionb": "O(n log n)",
      "optionc": "O(n²)",
      "optiond": "O(n³)",
      "correctoption": "D"
    },
    {
      "questionNo": 43,
      "question": "Which of the following is NOT a backtracking problem?",
      "optiona": "N-Queens",
      "optionb": "Sudoku Solver",
      "optionc": "Knapsack",
      "optiond": "Tower of Hanoi",
      "correctoption": "D"
    },
    {
      "questionNo": 44,
      "question": "The time complexity to find all pairs shortest paths in a graph is:",
      "optiona": "O(n)",
      "optionb": "O(n log n)",
      "optionc": "O(n²)",
      "optiond": "O(n³)",
      "correctoption": "D"
    },
    {
      "questionNo": 45,
      "question": "Which algorithm is used to detect cycles in a directed graph?",
      "optiona": "BFS",
      "optionb": "DFS",
      "optionc": "Dijkstra's",
      "optiond": "Kruskal's",
      "correctoption": "B"
    },
    {
      "questionNo": 46,
      "question": "The time complexity of insertion in a B-tree of order m with n keys is:",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(m log n)",
      "optiond": "O(n)",
      "correctoption": "B"
    },
    {
      "questionNo": 47,
      "question": "Which of the following is NOT a divide and conquer algorithm?",
      "optiona": "Merge Sort",
      "optionb": "Quick Sort",
      "optionc": "Binary Search",
      "optiond": "Insertion Sort",
      "correctoption": "D"
    },
    {
      "questionNo": 48,
      "question": "The time complexity of topological sort is:",
      "optiona": "O(V)",
      "optionb": "O(E)",
      "optionc": "O(V + E)",
      "optiond": "O(V log E)",
      "correctoption": "C"
    },
    {
      "questionNo": 49,
      "question": "Which algorithm is used to find articulation points in a graph?",
      "optiona": "Dijkstra's",
      "optionb": "Tarjan's",
      "optionc": "Prim's",
      "optiond": "Kruskal's",
      "correctoption": "B"
    },
    {
      "questionNo": 50,
      "question": "The time complexity of Kruskal's algorithm is:",
      "optiona": "O(E)",
      "optionb": "O(E log V)",
      "optionc": "O(V²)",
      "optiond": "O(V log E)",
      "correctoption": "B"
    },
    {
      "questionNo": 51,
      "question": "Which of the following is NOT a greedy algorithm?",
      "optiona": "Dijkstra's",
      "optionb": "Prim's",
      "optionc": "Kruskal's",
      "optiond": "Bellman-Ford",
      "correctoption": "D"
    },
    {
      "questionNo": 52,
      "question": "The time complexity of Rabin-Karp algorithm in average case is:",
      "optiona": "O(n)",
      "optionb": "O(n + m)",
      "optionc": "O(nm)",
      "optiond": "O(n log m)",
      "correctoption": "B"
    },
    {
      "questionNo": 53,
      "question": "Which data structure is used for implementing priority queue?",
      "optiona": "Stack",
      "optionb": "Queue",
      "optionc": "Heap",
      "optiond": "Linked List",
      "correctoption": "C"
    },
    {
      "questionNo": 54,
      "question": "The time complexity of Boyer-Moore algorithm in best case is:",
      "optiona": "O(n/m)",
      "optionb": "O(n + m)",
      "optionc": "O(nm)",
      "optiond": "O(n log m)",
      "correctoption": "A"
    },
    {
      "questionNo": 55,
      "question": "Which of the following is NOT a dynamic programming optimization?",
      "optiona": "Memoization",
      "optionb": "Tabulation",
      "optionc": "Branch and Bound",
      "optiond": "State Compression",
      "correctoption": "C"
    },
    {
      "questionNo": 56,
      "question": "The time complexity of KMP algorithm is:",
      "optiona": "O(n)",
      "optionb": "O(n + m)",
      "optionc": "O(nm)",
      "optiond": "O(n log m)",
      "correctoption": "B"
    },
    {
      "questionNo": 57,
      "question": "Which algorithm is used to find bridges in a graph?",
      "optiona": "Dijkstra's",
      "optionb": "Tarjan's",
      "optionc": "Prim's",
      "optiond": "Kruskal's",
      "correctoption": "B"
    },
    {
      "questionNo": 58,
      "question": "The time complexity of Prim's algorithm using binary heap is:",
      "optiona": "O(E)",
      "optionb": "O(E log V)",
      "optionc": "O(V²)",
      "optiond": "O(V log E)",
      "correctoption": "B"
    },
    {
      "questionNo": 59,
      "question": "Which of the following is NOT a string rotation problem?",
      "optiona": "Check if one string is rotation of another",
      "optionb": "Find lexicographically smallest rotation",
      "optionc": "Find longest palindromic rotation",
      "optiond": "Find shortest path in a graph",
      "correctoption": "D"
    },
    {
      "questionNo": 60,
      "question": "The time complexity of counting inversions using merge sort is:",
      "optiona": "O(n)",
      "optionb": "O(n log n)",
      "optionc": "O(n²)",
      "optiond": "O(log n)",
      "correctoption": "B"
    },
    {
      "questionNo": 61,
      "question": "Which data structure is used for implementing recursion?",
      "optiona": "Queue",
      "optionb": "Stack",
      "optionc": "Heap",
      "optiond": "Tree",
      "correctoption": "B"
    },
    {
      "questionNo": 62,
      "question": "The time complexity of finding median in a sorted array is:",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n log n)",
      "correctoption": "A"
    },
    {
      "questionNo": 63,
      "question": "Which algorithm is used to solve the maximum subarray problem?",
      "optiona": "Kadane's",
      "optionb": "Dijkstra's",
      "optionc": "Prim's",
      "optiond": "Kruskal's",
      "correctoption": "A"
    },
    {
      "questionNo": 64,
      "question": "The time complexity of finding longest increasing subsequence using DP is:",
      "optiona": "O(n)",
      "optionb": "O(n log n)",
      "optionc": "O(n²)",
      "optiond": "O(n³)",
      "correctoption": "C"
    },
    {
      "questionNo": 65,
      "question": "Which of the following is NOT a geometric algorithm?",
      "optiona": "Convex Hull",
      "optionb": "Closest Pair",
      "optionc": "Line Intersection",
      "optiond": "Shortest Path",
      "correctoption": "D"
    },
    {
      "questionNo": 66,
      "question": "The time complexity of Strassen's matrix multiplication is:",
      "optiona": "O(n²)",
      "optionb": "O(n².807)",
      "optionc": "O(n³)",
      "optiond": "O(n log n)",
      "correctoption": "B"
    },
    {
      "questionNo": 67,
      "question": "Which algorithm is used to find the convex hull of a set of points?",
      "optiona": "Quickhull",
      "optionb": "Dijkstra's",
      "optionc": "Prim's",
      "optiond": "Kruskal's",
      "correctoption": "A"
    },
    {
      "questionNo": 68,
      "question": "The time complexity of finding all permutations of a string is:",
      "optiona": "O(n)",
      "optionb": "O(n log n)",
      "optionc": "O(n!)",
      "optiond": "O(n²)",
      "correctoption": "C"
    },
    {
      "questionNo": 69,
      "question": "Which of the following is NOT a number theoretic algorithm?",
      "optiona": "Euclidean GCD",
      "optionb": "Sieve of Eratosthenes",
      "optionc": "Fast Exponentiation",
      "optiond": "Quick Sort",
      "correctoption": "D"
    },
    {
      "questionNo": 70,
      "question": "The time complexity of finding GCD using Euclidean algorithm is:",
      "optiona": "O(1)",
      "optionb": "O(log min(a,b))",
      "optionc": "O(n)",
      "optiond": "O(n log n)",
      "correctoption": "B"
    },
    {
      "questionNo": 71,
      "question": "Which data structure is used for implementing disjoint sets?",
      "optiona": "Array",
      "optionb": "Linked List",
      "optionc": "Tree",
      "optiond": "Graph",
      "correctoption": "C"
    },
    {
      "questionNo": 72,
      "question": "The time complexity of union-find with path compression is:",
      "optiona": "O(1)",
      "optionb": "O(α(n))",
      "optionc": "O(n)",
      "optiond": "O(log n)",
      "correctoption": "B"
    },
    {
      "questionNo": 73,
      "question": "Which of the following is NOT a type of tree traversal?",
      "optiona": "In-order",
      "optionb": "Pre-order",
      "optionc": "Post-order",
      "optiond": "Level-order",
      "correctoption": "D"
    },
    {
      "questionNo": 74,
      "question": "The time complexity of finding the longest common subsequence using DP is:",
      "optiona": "O(n)",
      "optionb": "O(n log n)",
      "optionc": "O(n²)",
      "optiond": "O(n³)",
      "correctoption": "C"
    },
    {
      "questionNo": 75,
      "question": "Which algorithm is used to find the shortest path in a weighted graph?",
      "optiona": "Dijkstra's",
      "optionb": "Bellman-Ford",
      "optionc": "Floyd-Warshall",
        "optiond": "All of the above",
        "correctoption": "D"
    },
    {
      "questionNo": 76,
      "question": "The time complexity of finding the longest palindromic subsequence using DP is:",
      "optiona": "O(n)",
      "optionb": "O(n log n)",
      "optionc": "O(n²)",
      "optiond": "O(n³)",
      "correctoption": "C"
    },
    {
      "questionNo": 77,
      "question": "Which of the following is NOT a type of binary tree?",
      "optiona": "Full Binary Tree",
      "optionb": "Complete Binary Tree",
      "optionc": "Perfect Binary Tree",
      "optiond": "Sparse Binary Tree",
      "correctoption": "D"
    },
    {
      "questionNo": 78,
      "question": "The time complexity of finding the longest common prefix of two strings is:",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n log n)",
      "correctoption": "C"
    },
    {
      "questionNo": 79,
      "question": "Which algorithm is used to find the maximum flow in a flow network?",
      "optiona": "Dijkstra's",
      "optionb": "Ford-Fulkerson",
      "optionc": "Prim's",
      "optiond": "Kruskal's",
      "correctoption": "B"
    },
    {
      "questionNo": 80,
      "question": "The time complexity of Bellman-Ford algorithm is:",
      "optiona": "O(V)",
      "optionb": "O(V + E)",
      "optionc": "O(VE)",
      "optiond": "O(V²)",
      "correctoption": "C"
    },
    {
      "questionNo": 81,
      "question": "Which of the following is NOT a type of graph?",
      "optiona": "Directed Graph",
      "optionb": "Undirected Graph",
      "optionc": "Weighted Graph",
      "optiond": "Circular Graph",
      "correctoption": "D"
    },
    {
      "questionNo": 82,
      "question": "The time complexity of finding the shortest path in an unweighted graph using BFS is:",
      "optiona": "O(V)",
      "optionb": "O(E)",
      "optionc": "O(V + E)",
      "optiond": "O(V log E)",
      "correctoption": "C"
    },
    {
      "questionNo": 83,
      "question": "Which of the following is NOT a property of a red-black tree?",
      "optiona": "Every node is either red or black",
      "optionb": "The root is always black",
      "optionc": "All leaves are red",
      "optiond": "No two red nodes are adjacent",
      "correctoption": "C"
    },
    {
      "questionNo": 84,
      "question": "The time complexity of finding the diameter of a binary tree is:",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n²)",
      "correctoption": "C"
    },
    {
      "questionNo": 85,
      "question": "Which of the following is NOT a type of heap?",
      "optiona": "Max-Heap",
      "optionb": "Min-Heap",
      "optionc": "Fibonacci Heap",
      "optiond": "Binary Search Heap",
      "correctoption": "D"
    },
    {
      "questionNo": 86,
      "question": "The time complexity of finding the kth smallest element in a BST is:",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(k)",
      "optiond": "O(n)",
      "correctoption": "C"
    },
    {
      "questionNo": 87,
      "question": "Which of the following is NOT a characteristic of dynamic programming?",
      "optiona": "Overlapping subproblems",
      "optionb": "Optimal substructure",
      "optionc": "Greedy choice property",
      "optiond": "Memoization",
      "correctoption": "C"
    },
    {
      "questionNo": 88,
      "question": "The time complexity of finding the maximum subarray sum using Kadane's algorithm is:",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n²)",
      "correctoption": "C"
    },
    {
      "questionNo": 89,
      "question": "Which of the following is NOT a type of hashing?",
      "optiona": "Separate Chaining",
      "optionb": "Linear Probing",
      "optionc": "Quadratic Probing",
      "optiond": "Binary Hashing",
      "correctoption": "D"
    },
    {
      "questionNo": 90,
      "question": "The time complexity of finding the longest palindromic substring using dynamic programming is:",
      "optiona": "O(n)",
      "optionb": "O(n log n)",
      "optionc": "O(n²)",
      "optiond": "O(n³)",
      "correctoption": "C"
    },
    {
      "questionNo": 91,
      "question": "Which of the following is NOT a type of graph traversal?",
      "optiona": "Depth-First Search",
      "optionb": "Breadth-First Search",
      "optionc": "Level-Order Traversal",
      "optiond": "Shortest Path Traversal",
      "correctoption": "D"
    },
    {
      "questionNo": 92,
      "question": "The time complexity of finding the number of connected components in a graph using DFS is:",
      "optiona": "O(V)",
      "optionb": "O(E)",
      "optionc": "O(V + E)",
      "optiond": "O(V log E)",
      "correctoption": "C"
    },
    {
      "questionNo": 93,
      "question": "Which of the following is NOT a characteristic of a binary search tree?",
      "optiona": "Left subtree contains nodes with keys less than the root",
      "optionb": "Right subtree contains nodes with keys greater than the root",
      "optionc": "All nodes have at most two children",
      "optiond": "All levels are completely filled",
      "correctoption": "D"
    },
    {
      "questionNo": 94,
      "question": "The time complexity of finding the median of two sorted arrays is:",
      "optiona": "O(1)",
      "optionb": "O(log n)",
      "optionc": "O(n)",
      "optiond": "O(n log n)",
      "correctoption": "B"
    },
    {
      "questionNo": 95,
      "question": "Which of the following is NOT a type of sorting algorithm?",
      "optiona": "Merge Sort",
      "optionb": "Quick Sort",
      "optionc": "Heap Sort",
      "optiond": "Binary Sort",
      "correctoption": "D"
    },
    {
      "questionNo": 96,
      "question": "The time complexity of finding the shortest path in a DAG using topological sort is:",
      "optiona": "O(V)",
      "optionb": "O(E)",
      "optionc": "O(V + E)",
      "optiond": "O(V log E)",
      "correctoption": "C"
    },
    {
      "questionNo": 97,
      "question": "Which of the following is NOT a type of tree?",
      "optiona": "Binary Tree",
      "optionb": "Ternary Tree",
      "optionc": "Quaternary Tree",
      "optiond": "Circular Tree",
      "correctoption": "D"
    },
    {
      "questionNo": 98,
      "question": "The time complexity of finding the longest common substring using dynamic programming is:",
      "optiona": "O(n)",
      "optionb": "O(n log n)",
      "optionc": "O(n²)",
      "optiond": "O(n³)",
      "correctoption": "C"
    },
    {
      "questionNo": 99,
      "question": "Which of the following is NOT a type of graph algorithm?",
      "optiona": "Shortest Path",
      "optionb": "Minimum Spanning Tree",
      "optionc": "Maximum Flow",
      "optiond": "Binary Search",
      "correctoption": "D"
    },
    {
      "questionNo": 100,
      "question": "Which of the following is NOT a type of binary search tree?",
      "optiona": "AVL Tree",
      "optionb": "Red-Black Tree",
      "optionc": "Splay Tree",
      "optiond": "Circular Tree",
      "correctoption": "D"
    }
]
